(ns braid.lib.gravatar
  (:require
    [clojure.string :as string]
    [braid.core.server.crypto :as crypto]))

(def ^:private gravatar-base-url ".gravatar.com/avatar/")

(defn- genhash
  "Generate the hash needed for Gravatar.
   The hash is generated by trimming, lowercasing & md5-summing the email."
  [^String email]
  (-> email string/trim string/lower-case crypto/md5 crypto/bytes->hex
      string/lower-case))

(defn- genparams
  "Generate the parameters needed for Gravatar."
  [& {size :size default :default rating :rating}]
  (format "?s=%s&r=%s&d=%s&" size (name rating) (name default)))

(defn url
  "Generate a gravatar url.
  Based on https://github.com/Raynes/clavatar, updated to not use
  java.xml.bind, to avoid java 9+ module issues."
  [email & {:keys [size https rating default]
            :or {size 50
                 https true
                 rating :pg
                 default :retro}}]
 (let [base-url (str gravatar-base-url
                      (genhash (or email ""))
                      ".jpg"
                      (genparams :size size :default default :rating rating))]
   (str (if https "https://secure" "http://www") base-url)))
